[{"/Users/artur/Development/tests/mern-stack/client/src/index.tsx":"1","/Users/artur/Development/tests/mern-stack/client/src/reportWebVitals.ts":"2","/Users/artur/Development/tests/mern-stack/client/src/App.tsx":"3","/Users/artur/Development/tests/mern-stack/client/src/util/apiCaller.ts":"4","/Users/artur/Development/tests/mern-stack/client/src/store/index.ts":"5","/Users/artur/Development/tests/mern-stack/client/src/store/sagas/index.ts":"6","/Users/artur/Development/tests/mern-stack/client/src/store/reducers/index.ts":"7","/Users/artur/Development/tests/mern-stack/client/src/store/sagas/auth.ts":"8","/Users/artur/Development/tests/mern-stack/client/src/store/reducers/favorite.ts":"9","/Users/artur/Development/tests/mern-stack/client/src/store/sagas/favorite.ts":"10","/Users/artur/Development/tests/mern-stack/client/src/store/reducers/modal.ts":"11","/Users/artur/Development/tests/mern-stack/client/src/store/reducers/auth.ts":"12","/Users/artur/Development/tests/mern-stack/client/src/store/actions/auth.ts":"13","/Users/artur/Development/tests/mern-stack/client/src/store/actions/actionTypes.ts":"14","/Users/artur/Development/tests/mern-stack/client/src/store/actions/favorite.ts":"15","/Users/artur/Development/tests/mern-stack/client/src/types.ts":"16","/Users/artur/Development/tests/mern-stack/client/src/store/actions/post.ts":"17","/Users/artur/Development/tests/mern-stack/client/src/store/sagas/post.ts":"18","/Users/artur/Development/tests/mern-stack/client/src/store/reducers/post.ts":"19","/Users/artur/Development/tests/mern-stack/client/src/store/actions/modal.ts":"20","/Users/artur/Development/tests/mern-stack/client/src/pages/PostListPage.tsx":"21","/Users/artur/Development/tests/mern-stack/client/src/pages/PostDetailPage.tsx":"22","/Users/artur/Development/tests/mern-stack/client/src/components/Modal/Login.tsx":"23","/Users/artur/Development/tests/mern-stack/client/src/components/Modal/Signup.tsx":"24","/Users/artur/Development/tests/mern-stack/client/src/components/Nav/index.tsx":"25","/Users/artur/Development/tests/mern-stack/client/src/components/Modal/ModaContainer.tsx":"26","/Users/artur/Development/tests/mern-stack/client/src/components/Modal/ModalBody.tsx":"27","/Users/artur/Development/tests/mern-stack/client/src/components/Modal/ModalHeader.tsx":"28","/Users/artur/Development/tests/mern-stack/client/src/components/Post/PostCreateWidget.tsx":"29","/Users/artur/Development/tests/mern-stack/client/src/components/Post/PostList.tsx":"30","/Users/artur/Development/tests/mern-stack/client/src/components/Input/index.tsx":"31","/Users/artur/Development/tests/mern-stack/client/src/components/Post/PostListItem.tsx":"32","/Users/artur/Development/tests/mern-stack/client/src/util/localStorage.ts":"33","/Users/artur/Development/tests/mern-stack/client/src/util/selector.ts":"34","/Users/artur/Development/tests/mern-stack/client/src/Router.tsx":"35"},{"size":621,"mtime":1612305200924,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1612281344253,"results":"38","hashOfConfig":"37"},{"size":1363,"mtime":1612447301042,"results":"39","hashOfConfig":"37"},{"size":1109,"mtime":1612432008585,"results":"40","hashOfConfig":"37"},{"size":871,"mtime":1612446498406,"results":"41","hashOfConfig":"37"},{"size":234,"mtime":1612307482394,"results":"42","hashOfConfig":"37"},{"size":260,"mtime":1612307690792,"results":"43","hashOfConfig":"37"},{"size":1574,"mtime":1612443836110,"results":"44","hashOfConfig":"37"},{"size":359,"mtime":1612447821053,"results":"45","hashOfConfig":"37"},{"size":1516,"mtime":1612451008172,"results":"46","hashOfConfig":"37"},{"size":902,"mtime":1612283896517,"results":"47","hashOfConfig":"37"},{"size":990,"mtime":1612445480573,"results":"48","hashOfConfig":"37"},{"size":604,"mtime":1612352115948,"results":"49","hashOfConfig":"37"},{"size":2378,"mtime":1612448983564,"results":"50","hashOfConfig":"37"},{"size":483,"mtime":1612450663377,"results":"51","hashOfConfig":"37"},{"size":858,"mtime":1612283949129,"results":"52","hashOfConfig":"37"},{"size":604,"mtime":1612437908667,"results":"53","hashOfConfig":"37"},{"size":1746,"mtime":1612443849851,"results":"54","hashOfConfig":"37"},{"size":493,"mtime":1612437958805,"results":"55","hashOfConfig":"37"},{"size":512,"mtime":1612283896505,"results":"56","hashOfConfig":"37"},{"size":1374,"mtime":1612448287085,"results":"57","hashOfConfig":"37"},{"size":912,"mtime":1612427669836,"results":"58","hashOfConfig":"37"},{"size":2166,"mtime":1612427685484,"results":"59","hashOfConfig":"37"},{"size":2176,"mtime":1612427683712,"results":"60","hashOfConfig":"37"},{"size":2268,"mtime":1612427440379,"results":"61","hashOfConfig":"37"},{"size":345,"mtime":1612309838845,"results":"62","hashOfConfig":"37"},{"size":265,"mtime":1612309838848,"results":"63","hashOfConfig":"37"},{"size":364,"mtime":1612391863713,"results":"64","hashOfConfig":"37"},{"size":3030,"mtime":1612427553128,"results":"65","hashOfConfig":"37"},{"size":491,"mtime":1612448304830,"results":"66","hashOfConfig":"37"},{"size":1154,"mtime":1612427463016,"results":"67","hashOfConfig":"37"},{"size":2278,"mtime":1612450722890,"results":"68","hashOfConfig":"37"},{"size":489,"mtime":1612446887176,"results":"69","hashOfConfig":"37"},{"size":164,"mtime":1612434689630,"results":"70","hashOfConfig":"37"},{"size":675,"mtime":1612447379526,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"3e32p",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/artur/Development/tests/mern-stack/client/src/index.tsx",[],["147","148"],"/Users/artur/Development/tests/mern-stack/client/src/reportWebVitals.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/App.tsx",["149"],"/Users/artur/Development/tests/mern-stack/client/src/util/apiCaller.ts",["150"],"/Users/artur/Development/tests/mern-stack/client/src/store/index.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/sagas/index.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/reducers/index.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/sagas/auth.ts",["151"],"/Users/artur/Development/tests/mern-stack/client/src/store/reducers/favorite.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/sagas/favorite.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/reducers/modal.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/reducers/auth.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/actions/auth.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/actions/actionTypes.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/actions/favorite.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/types.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/actions/post.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/sagas/post.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/reducers/post.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/store/actions/modal.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/pages/PostListPage.tsx",["152"],"/Users/artur/Development/tests/mern-stack/client/src/pages/PostDetailPage.tsx",["153"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../store';\n// Import Actions\nimport { getPost } from '../store/actions/post';\n// Import Selectors\nimport { useParams } from 'react-router-dom';\n\nexport function PostDetailPage() {\n\n  const { cuid }: { cuid: string } = useParams();\n  const post = useSelector((state: RootState) => state.post.data.find(currentPost => (currentPost.cuid === cuid)));\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!post) dispatch(getPost(cuid));\n  }, []);\n\n  return (post\n    ?\n      (<div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1>{post.title}</h1>\n            <p>By {post.name}</p>\n            <p>{post.content}</p>\n          </div>\n        </div>\n      </div>)\n    : (<div>Loading</div>)\n  );\n}\nexport default PostDetailPage;\n","/Users/artur/Development/tests/mern-stack/client/src/components/Modal/Login.tsx",["154"],"import React, { useEffect, useState } from 'react';\nimport styles from './Modal.module.css';\nimport Input from '../Input';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModalLogin } from '../../store/actions/modal';\nimport { login } from '../../store/actions/auth';\nimport ModaContainer from './ModaContainer';\nimport ModalBody from './ModalBody';\nimport ModalHeader from './ModalHeader';\nimport { RootState } from '../../store';\n\n\nconst Modal = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkFields, setCheckFields] = useState(false);\n  const [error, setError] = useState('');\n  const [isSubmit, setIsSubmit] = useState(false)\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state: RootState) => state.auth.loading);\n  const message = useSelector((state: RootState) => state.auth.message);\n  const authorized = useSelector((state: RootState) => state.auth.authorized);\n  const validateFields = (fields: string[]) => !fields.some(field => !field);\n\n  useEffect(() => {\n    if (!isLoading && isSubmit) {\n      authorized ? onClose() : setError(message);\n    }\n  }, [isLoading]);\n\n  const onClose = () => {\n    dispatch(closeModalLogin())\n  }\n\n  const submit = () => {\n    const isValid = validateFields([email, password]);\n    if (isValid) {\n      const item = {\n        email,\n        password,\n      }\n      setIsSubmit(true);\n      dispatch(login(item));\n    } else {\n      setCheckFields(true);\n    }\n  }\n  return (\n    <ModaContainer>\n      <ModalHeader title='LOGIN' onClose={onClose} />\n      <ModalBody>\n        <form className={styles.container}>\n          <Input label='Email' value={email} onChange={setEmail} checkFields={checkFields} />\n          <Input label='Password' value={password} onChange={setPassword} checkFields={checkFields} />\n        </form>\n        <Button className=\"mt-4\" variant=\"contained\" color=\"primary\" onClick={submit} >Login</Button>\n        <div className={styles.error}>\n          {error}\n        </div>\n      </ModalBody>\n    </ModaContainer>\n  )\n};\n\nexport default Modal;","/Users/artur/Development/tests/mern-stack/client/src/components/Modal/Signup.tsx",["155"],"import React, { useState, useEffect } from 'react';\nimport styles from './Modal.module.css';\nimport Input from '../Input';\nimport Button from '@material-ui/core/Button';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModalRegister } from '../../store/actions/modal';\nimport { signup } from '../../store/actions/auth';\nimport ModaContainer from './ModaContainer';\nimport ModalBody from './ModalBody';\nimport ModalHeader from './ModalHeader';\nimport { RootState } from '../../store';\n\nconst Signup = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [checkFields, setCheckFields] = useState(false);\n  const [error, setError] = useState('');\n  const [isSubmit, setIsSubmit] = useState(false)\n  const dispatch = useDispatch();\n  const isLoading = useSelector((state: RootState) => state.auth.loading);\n  const message = useSelector((state: RootState) => state.auth.message);\n  const authorized = useSelector((state: RootState) => state.auth.authorized);\n\n  useEffect(() => {\n    if (!isLoading && isSubmit) {\n      authorized ? onClose() : setError(message);\n    }\n  }, [isLoading]);\n\n  const validateFields = (fields: string[]) => !fields.some(field => !field);\n\n  const onClose = () => {\n    dispatch(closeModalRegister())\n  }\n\n  const submit = () => {\n    const isValid = validateFields([email, password]);\n    if (isValid) {\n      const item = {\n        email,\n        password,\n      }\n      setIsSubmit(true)\n      dispatch(signup(item));\n    } else {\n      setCheckFields(true);\n    }\n  }\n  return (\n    <ModaContainer>\n      <ModalHeader title='Signup' onClose={onClose} />\n      <ModalBody>\n        <form className={styles.container}>\n          <Input label='Email' value={email} onChange={setEmail} checkFields={checkFields} />\n          <Input label='password' value={password} onChange={setPassword} checkFields={checkFields} />\n        </form>\n        <Button className=\"mt-4\" variant=\"contained\" color=\"primary\" onClick={submit} >Login</Button>\n        <div className={styles.error}>\n          {error}\n        </div>\n      </ModalBody>\n    </ModaContainer>\n  )\n};\n\nexport default Signup;","/Users/artur/Development/tests/mern-stack/client/src/components/Nav/index.tsx",[],"/Users/artur/Development/tests/mern-stack/client/src/components/Modal/ModaContainer.tsx",[],"/Users/artur/Development/tests/mern-stack/client/src/components/Modal/ModalBody.tsx",[],"/Users/artur/Development/tests/mern-stack/client/src/components/Modal/ModalHeader.tsx",[],"/Users/artur/Development/tests/mern-stack/client/src/components/Post/PostCreateWidget.tsx",[],"/Users/artur/Development/tests/mern-stack/client/src/components/Post/PostList.tsx",[],"/Users/artur/Development/tests/mern-stack/client/src/components/Input/index.tsx",["156"],"import React, { useState, useEffect } from 'react';\nimport styles from './Input.module.css';\n\ninterface Props {\n\tlabel: string\n\tvalue: string\n\tonChange: (value: string) => void\n\tcheckFields: boolean\n}\nconst Input = (props: Props) => {\n\tconst [error, setError] = useState('')\n\tconst { label, value, onChange, checkFields } = props;\n\n\tuseEffect(() => {\n\t\tif(checkFields){\n\t\t\tsetError(!value ? 'this field is required' : '')\n\t\t}\n\t}, [checkFields])\n\tconst onChangeValue = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\tonChange(event.target.value)\n\t};\n\n\tconst handleBlur = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\tsetError(!e.target.value ? 'this field is required' : '')\n\t};\n\n\treturn (\n\t\t<div className={styles.input_group}>\n\t\t\t<label className={`${styles.input_underlined} ${error ? styles.input_error : ''}`}>\n\t\t\t\t<input required className={styles.input} value={value} onChange={onChangeValue} onBlur={handleBlur}/>\n\t\t\t\t<span className={styles.input_label}>{label}</span>\n\t\t\t\t{\n\t\t\t\t\terror && <span className={styles.input_helper}>{error}</span>\n\t\t\t\t}\n\t\t\t</label>\n\t\t</div>\n\t)\n}\n\nexport default Input;","/Users/artur/Development/tests/mern-stack/client/src/components/Post/PostListItem.tsx",[],"/Users/artur/Development/tests/mern-stack/client/src/util/localStorage.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/util/selector.ts",[],"/Users/artur/Development/tests/mern-stack/client/src/Router.tsx",["157"],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":29,"column":6,"nodeType":"164","endLine":29,"endColumn":8,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":7,"column":1,"nodeType":"168","endLine":28,"endColumn":3},{"ruleId":"169","severity":1,"message":"170","line":13,"column":19,"nodeType":"171","messageId":"172","endLine":13,"endColumn":21},{"ruleId":"162","severity":1,"message":"163","line":22,"column":5,"nodeType":"164","endLine":22,"endColumn":7,"suggestions":"173"},{"ruleId":"162","severity":1,"message":"174","line":17,"column":6,"nodeType":"164","endLine":17,"endColumn":8,"suggestions":"175"},{"ruleId":"162","severity":1,"message":"176","line":30,"column":6,"nodeType":"164","endLine":30,"endColumn":17,"suggestions":"177"},{"ruleId":"162","severity":1,"message":"176","line":28,"column":6,"nodeType":"164","endLine":28,"endColumn":17,"suggestions":"178"},{"ruleId":"162","severity":1,"message":"179","line":18,"column":5,"nodeType":"164","endLine":18,"endColumn":18,"suggestions":"180"},{"ruleId":"162","severity":1,"message":"163","line":13,"column":6,"nodeType":"164","endLine":13,"endColumn":8,"suggestions":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["184"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["185"],"React Hook useEffect has missing dependencies: 'cuid', 'dispatch', and 'post'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has missing dependencies: 'authorized', 'isSubmit', 'message', and 'onClose'. Either include them or remove the dependency array.",["187"],["188"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["189"],["190"],"no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"191","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"196","fix":"198"},{"desc":"199","fix":"200"},{"desc":"191","fix":"201"},"Update the dependencies array to be: [dispatch]",{"range":"202","text":"203"},{"range":"204","text":"203"},"Update the dependencies array to be: [cuid, dispatch, post]",{"range":"205","text":"206"},"Update the dependencies array to be: [authorized, isLoading, isSubmit, message, onClose]",{"range":"207","text":"208"},{"range":"209","text":"208"},"Update the dependencies array to be: [checkFields, value]",{"range":"210","text":"211"},{"range":"212","text":"203"},[933,935],"[dispatch]",[636,638],[572,574],"[cuid, dispatch, post]",[1216,1227],"[authorized, isLoading, isSubmit, message, onClose]",[1145,1156],[430,443],"[checkFields, value]",[420,422]]